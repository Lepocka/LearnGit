a = 2          # int - цілочисельний тип даних 
print(type(a)) # виведення типу даних змінної а
print()

b = 2.2        # float - дробовий тип даних
print(type(b))
print()

c = 2 + 4j     # complex - комплексний тип даних. j це уявна одиниця, корінь квадратний з -1
print(type(c))
print()

d = 'Hello World'   # string - текстовий тип даних. При створенні можна використовувати і одинарні, подвійні лапки
d1 = "Hello World"
print(d + ' ' + d1)
print(type(d))
print(type(d1))
print()

e = [10, 3.5, "hi", True] # list - це список, у якому можна зберігати як елементи
print(e)                  # одного типу так і елементи різних типів
print(type(e))            
e[0] = e[0] + 3           # Також елементи і сам список можна змінювати
print(e)
print()

f = (10, 3.5, "hi", True) # tuple - це кортеж, у якому можна зберігати як елементи                  
print(f)                  # одного типу так і елементи різних типів
print(type(f))            # Проте навідмінно від списку елементи і сам кортеж не можна змінювати
print()                   # Доступ до елементів як у кортежі так і у списку відбувається через індекс

g = {"name": "Kolya",        
    "age": 19,         
    "student": True,
    "grades": [90, 85, 100],
    }                        # dict - це вбудована структура значень що зберігає дані у форматі:
                             # Ключ : Значення. При цьому як ключ так і значення можуть бути різних типів
                             # але Ключ повинен бути незмінним, а значення може змінюватись.
print(g["name"])             # Доступ до даних відбувається за ключем
print(type(g))
print()

h = True        # bool - це бінарний тип даних що може приймати значення True і False
h1 = False
print(type(h))
print(type(h1))
print()

s = {1, 2 ,3, 2, 5, 5} # set - це невпорядкована колекція з елементами які:
print(s)               # можна змінювати, неіндексовані та не містять дублікати
print(type(s))

